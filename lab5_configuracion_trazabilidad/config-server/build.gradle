buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		jcenter()
    mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.bmuschko:gradle-docker-plugin:3.2.0'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

jar {
  baseName = 'config-server'
  version = ''
}

group = 'com.config.server'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
	mavenCentral()
}

ext {
	springCloudVersion = 'Dalston.SR4'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
compile('org.springframework.cloud:spring-cloud-config-server')

}

task createDockerfile(type: com.bmuschko.gradle.docker.tasks.image.Dockerfile) {
  destFile = project.file('build/libs/Dockerfile')
  from 'openjdk:8u151-slim'
  maintainer 'jovani arzate "jovaniac@gmail.com"'
  copyFile 'config-server.jar', '/opt/config-server.jar'
  exposePort 8888
	entryPoint 'java', '-Djava.awt.headless=true', '-jar', '/opt/config-server.jar'
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
  dependsOn createDockerfile
  inputDir = createDockerfile.destFile.parentFile
  tag = 'jovaniac/config-server:' + project.version.toLowerCase()
}

task pushImage(type: com.bmuschko.gradle.docker.tasks.image.DockerPushImage) {
  dependsOn buildImage
  imageName = buildImage.tag
}

createDockerfile.dependsOn bootRepackage
